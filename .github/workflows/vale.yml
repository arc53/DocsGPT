name: Vale Linting

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**/*.md'
      - 'docs/**/*.mdx'
      - '.github/workflows/vale.yml'
      - '.vale.ini'
      - '.github/styles/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**/*.md'
      - 'docs/**/*.mdx'
      - '.github/workflows/vale.yml'
      - '.vale.ini'
      - '.github/styles/**'

jobs:
  vale-lint:
    name: Vale Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for PR annotations to work

      - name: Install Vale
        run: |
          # Install Vale using Homebrew (works on Linux in GitHub Actions)
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/errata-ai/vale/releases/download/v2.28.0/vale_2.28.0_Linux_64-bit.tar.gz
          tar -xvzf vale_2.28.0_Linux_64-bit.tar.gz
          sudo mv vale /usr/local/bin/
          
          # Verify installation
          echo "Vale version:"
          vale --version
          
          # Print PATH for debugging
          echo "PATH: $PATH"
          
      - name: Set up Vale configuration
        run: |
          # Create config directory structure
          mkdir -p ~/.config/vale/styles/
          
          # Copy our styles to the config directory
          cp -r .github/styles/* ~/.config/vale/styles/
          
          # Verify the files were copied
          echo "Vale config directory contents:"
          ls -la ~/.config/vale/
          
      - name: Run Vale
        run: |
          # Run Vale with our configuration
          echo "Current directory: $(pwd)"
          echo "Files in current directory:".github/workflows/vale.yml
          ls -la
          
          # Run Vale with the config file in the current directory
          # and output in a format that works well with GitHub Actions
          vale --config=.vale.ini --output=line ./docs
          
          # Exit with code 0 to prevent the job from failing on warnings
          # Change to 'exit $?' to fail the build on warnings
          exit 0
